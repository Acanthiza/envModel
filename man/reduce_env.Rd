% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reduce_env.R
\name{reduce_env}
\alias{reduce_env}
\title{Reduce number of environmental variables}
\usage{
reduce_env(
  env_df,
  env_cols,
  y_col = NULL,
  y_col_factor = TRUE,
  imp_col = "1",
  thresh = 0.95,
  remove_always = c("lat", "long"),
  keep_always = NULL
)
}
\arguments{
\item{env_df}{Dataframe with environmental variables}

\item{env_cols}{Numeric or character vector defining columns in env_df
that contain the variables to test for correlation. Correlation is found via
\code{\link[caret:findCorrelation]{caret::findCorrelation()}}.}

\item{y_col}{Character. Name of a column in \code{env_df} to test for
'important' variables.}

\item{y_col_factor}{Logical. Should \code{y_col} be considered a
factor in \code{randomForest::randomForest()}? Thus classification rather than
regression.}

\item{imp_col}{Character. Name of column in result of call to
\code{randomForest::importance()} to use in deciding 'importance' of a variable.}

\item{thresh}{Numeric. Threshold correlation value above which a variable
is flagged as correlated.}

\item{remove_always}{Character. Any matches will always be removed (even if
not correlated).}

\item{keep_always}{Character vector. Any string in this vector, if matched,
will not be removed (even if correlated).}
}
\value{
list with elements
itemize{
\item{env_cols}{as provided}
\item{remove_always}{as provided}
\item{keep_always}{as provided}
\item{remove_constant}{columns with only one value}
\item{env_corr}{result of applying \code{\link[stats:cor]{stats::cor()}} to \code{env_df[,env_cols]}}
\item{remove_corr}{column names in \code{env_df} that are correlated with another
column above \code{thresh}.}
\item{rf}{result of applying \code{randomforest::randomforest()} in the form of
y_col ~ env_cols}
\item{rf_vi}{variable importance from rf}
\item{remove}{character vector of columns to remove from further
analysis, based on results from \code{reduce_env()}}
}
}
\description{
Given a data frame of environmental variables, flag correlated, and
optionally, important variables as precursor to further analysis.
}
\examples{

# env variables, presence and background points code from:
# https://rspatial.org/sdm/3_sdm_absence-background.html#absence-and-background-points

# setup
library(predicts)
f <- system.file("ex/bio.tif", package="predicts")

# env variables
predictors <- rast(f)
predictors

# presences
file <- paste(system.file(package="predicts"), "/ex/bradypus.csv", sep="")
bradypus <- read.table(file,  header=TRUE,  sep=',')
presvals <- extract(predictors, bradypus[,-1])[-1]
presvals$pa <- 1

# backgrounds
backgr <- spatSample(predictors, 500, "random", as.points=TRUE, na.rm=TRUE)
absvals <- values(backgr)
absvals$pa <- 0

# presences + background
pb <- rbind(presvals, absvals)

# find correlated and 'unimportant' variables
result <- reduce_env(pb
                  , env_cols = names(predictors)
                  , y_col = "pa"
                  , imp_col = "1"
                  , thresh = 0.9
                  )

names(result)

result$remove_corr

result$remove_rf

result$keep
}
